name: ADC website deployment
run-name: Deploy ADC website [@${{ github.actor }}]

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add version file to deployment package
        run: |
          VERSION_FILE_NAME=version.json
          VERSION_FILE_PATH=${{ github.workspace }}/web/src/$VERSION_FILE_NAME
          VERSION=$GITHUB_REF_NAME
          NEW_CONTENT="{\"version\": \"$VERSION\"}"

          echo "$NEW_CONTENT" > $VERSION_FILE_PATH

      - name: Install dependencies
        run: |
          cd ./infra
          npm install
          npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::030460844096:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-west-1

      - name: Create stack
        run: |
          cd ./infra
          cdk deploy --require-approval never \
            -c aliasRecordName=${{ vars.ALIAS_RECORD_NAME }} \
            -c bucketName=${{ vars.BUCKET_NAME }} \
            -c cachePolicyName=${{ vars.CACHE_POLICY_NAME }} \
            -c deploymentName=${{ vars.DEPLOYMENT_NAME }} \
            -c distributionName=${{ vars.DISTRIBUTION_NAME }} \
            -c domains=${{ vars.DOMAINS }} \
            -c host=${{ vars.HOST }} \
            -c stackName=${{ vars.STACK_NAME }} \

  smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: ${{ inputs.environment }}
    needs: deploy-infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Smoke test
        run: bash web/test/scripts/smoke-test.sh https://${{ vars.WEB_DOMAIN }}
